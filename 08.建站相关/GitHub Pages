# █ GitHub Pages

GitHub Pages 是 GitHub 提供的静态网页空间, 可以用来创建个人主页和项目介绍页. 

因为是静态空间, 只能提供静态页面, 不能部署服务端应用程序.

每个 GitHub 账号可以开通 **一个** 开发者主页, 以及 **无限个** 项目主页.

# 一. 开发者主页

## 1. 创建仓库

创建名为 `username.github.io` 的仓库, 其中的 `username` 与当前账户的用户名相同. 使用其他名字时无效. 

## 2. 提交静态内容



## 3. 绑定域名(CNAME)

1. 购买域名
2. 为域名添加 cname 解析
3. 在根目录下添加 `CNAME` 文件, 文件内容只有一行, 就是要绑定的域名

# 二. 项目主页

每个项目的settings 页面中, 有一节关于 `GitHub Pages` 的设置项, 其中包括以下设置

- 页面内容来源
- 项目主页模板, 可选
- 绑定域名
- 是否启用 https

## 1. 使用自定义主页

GitHub 默认会在项目下查找 `index.html` 文件, 如果能找到, 则用其作为项目主页. 如果没有`index.html`, 则会查找 `readme.md`, 将其解析渲染成 html 作为项目主页. 

可以在以下位置放置 `index.html` 或 `readme.md`

- **项目根目录**, Source 选择 `master branch`
- **项目/docs目录**, Source 选择 `master branch /docs folder`

![image-20191217183750562](Github Pages.assets/image-20191217183750562.png)

## 2. 使用模板

GitHub 在自动解析 `README.md` 作为页面主页时, 提供了一些页面模板, 可以使渲染出来的项目主页更加美观. 

![image-20191217184303519](Github Pages.assets/image-20191217184303519.png)

应用主题后, github 会自动在项目下创建一个 `_config.yml` 配置文件, 其中记录了该项目应用的主题. 删除该行配置即可. 

```yaml
theme: jekyll-theme-cayman
```

# █ Hexo 静态博客

# 一. 安装与配置

## 安装

安装条件

- git
- node.js

通常建议全局安装

```sh
npm install -g hexo-cli
```

熟悉 node.js 的用户也可以选择局部安装

```sh
npm install hexo
```

安装完成后, 可以使用以下两种方式执行 Hexo

- `npm hexo <command>`
- 将 hexo 所在目录下的 `node_modules` 添加到环境变量, 然后使用 `hexo <command>`







## 主题配置

## 关联 GitHub Pages

# 二. 使用

## 建站

```sh
$ hexo init <hexo_home>
$ cd <hexo_home>
$ npm install
```

新建一个文件夹, 然后进行初始化

## 配置

修改`_config.yml`, 更改必要的内容

## 编写文章

```sh
$ cd <hexo_home>
$ hexo new [layout] <文章名>
```

不指定 layout 时, 使用 `_config.yml` 中 `default_layout` 参数代替

如果标题包含空格, 需要使用引号括起来.

该命令会在 `source/_posts/` 下创建名为 `文章名.md` 的文件, 打开并编写文章内容

## 编译成静态页面

```sh
$ cd <hexo_home>
$ hexo generate
```

## 本地预览

```sh
$ hexo server
```

